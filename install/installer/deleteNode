#!/bin/bash
# @@@ START COPYRIGHT @@@
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# @@@ END COPYRIGHT @@@


export TRAF_CONFIG="/etc/trafodion/trafodion_config"
export NODES=""

while [[ $# -gt 0 ]]; do
    case "$1" in
        --nodes)
            NODES=$2
            shift
            ;;
        *)
            echo "***ERROR: unknown parameter '$1'"
            print_usage
            exit -1
    esac
    shift
done

source $TRAF_CONFIG

function deleteNodesConfig {

source $TRAF_CONFIG

DELETE_NODES="$NODES"
MY_DELETE_NODES=""

for node in $NODES
do
   MY_DELETE_NODES="$MY_DELETE_NODES -w $node"
done

echo $MY_DELETE_NODES

export PDSH_SSH_CMD="ssh -q -n %h"

export TRAF_NEW_PDSH="pdsh -R exec $MY_DELETE_NODES $PDSH_SSH_CMD"
export TRAF_NEW_PDCP="pdcp -R ssh $MY_DELETE_NODES"


sudo chmod 777 $TRAF_CONFIG
sed -i '/DELETE_NODES\=/d' $TRAF_CONFIG
echo "export DELETE_NODES=\"$DELETE_NODES\"" >> $TRAF_CONFIG
sudo chmod 777 $TRAF_CONFIG
sed -i '/MY_DELETE_NODES\=/d' $TRAF_CONFIG
echo "export MY_DELETE_NODES=\"$MY_DELETE_NODES\"" >> $TRAF_CONFIG
sudo chmod 777 $TRAF_CONFIG
sed -i '/TRAF_NEW_PDSH\=/d' $TRAF_CONFIG
echo "export TRAF_NEW_PDSH=\"$TRAF_NEW_PDSH\"" >> $TRAF_CONFIG
sudo chmod 777 $TRAF_CONFIG
sed -i '/TRAF_NEW_PDCP\=/d' $TRAF_CONFIG
echo "export TRAF_NEW_PDCP=\"$TRAF_NEW_PDCP\"" >> $TRAF_CONFIG
sudo chmod 777 $TRAF_CONFIG
}

function createNewNodes {

source $TRAF_CONFIG
temp=""
tempW=""
for node in $NODE_LIST
do
   if [[ ! $DELETE_NODES  =~ .*$node.* ]]; then
      temp="$temp $node"
      tempW="$tempW $node"
   fi
done

NODE_LIST="$temp"
node_count=$(echo $NODE_LIST | wc -w)
MY_NODES="$tempW"

temp1=""
tempW1=""

for node in $ALL_NODE_LIST
do
   if [[ ! $DELETE_NODES  =~ .*$node.* ]]; then
      temp1="$temp1 $node"
      tempW1="$tempW1 -w $node"
   fi
done

ALL_NODE_LIST="$temp1"
echo $ALL_NODE_LIST
ALL_NODES="$tempW1"
echo $ALL_NODES

TRAF_PDSH="pdsh -R exec $ALL_NODES $PDSH_SSH_CMD"
TRAF_PDCP="pdcp -R ssh $ALL_NODES"

sudo chmod 777 $TRAF_CONFIG
sed -i '/TRAF_PDSH\=/d' $TRAF_CONFIG
echo "export TRAF_PDSH=\"$TRAF_PDSH\"" >> $TRAF_CONFIG
sudo chmod 777 $TRAF_CONFIG
sed -i '/TRAF_PDCP\=/d' $TRAF_CONFIG
echo "export TRAF_PDCP=\"$TRAF_PDCP\"" >> $TRAF_CONFIG
sudo chmod 777 $TRAF_CONFIG
sed -i '/\<ALL_NODES\>/d' $TRAF_CONFIG
echo "export ALL_NODES=\"$ALL_NODES\"" >> $TRAF_CONFIG
sudo chmod 777 $TRAF_CONFIG
sed -i '/\<NODE_LIST\>/d' $TRAF_CONFIG
echo "export NODE_LIST=\"$NODE_LIST\"" >> $TRAF_CONFIG
sudo chmod 777 $TRAF_CONFIG
sed -i '/node_count\=/d' $TRAF_CONFIG
echo "export node_count=\"$node_count\"" >> $TRAF_CONFIG
sudo chmod 777 $TRAF_CONFIG
sed -i '/\<ALL_NODE_LIST\>/d' $TRAF_CONFIG
echo "export ALL_NODE_LIST=\"$ALL_NODE_LIST\"" >> $TRAF_CONFIG
sudo chmod 777 $TRAF_CONFIG
sed -i '/\<MY_NODES\>/d' $TRAF_CONFIG
echo "export MY_NODES=\"$MY_NODES\"" >> $TRAF_CONFIG
sudo chmod 777 $TRAF_CONFIG
}


function copyConfig {

source $TRAF_CONFIG

cp $TRAF_CONFIG $PWD
$TRAF_PDCP $PWD/trafodion_config $HOME
$TRAF_PDSH sudo cp $HOME/trafodion_config /etc/trafodion/
$TRAF_PDSH sudo chmod 777 $TRAF_CONFIG

}

function deleteNodes {

for node in $DELETE_NODES
do

    sudo su $TRAF_USER --login --command "cd $SQ_ROOT/sql/scripts; echo \"node down $node\" | sqshell -a"
    sleep 30
    sudo su $TRAF_USER --login --command "cd $SQ_ROOT/sql/scripts; echo \"node delete $node\" | sqshell -a"
    sleep 30

done


}

function sqRegen {

sudo su $TRAF_USER --login --command "cd $SQ_ROOT/sql/scripts; sqregen -config"

}

function copysqConfig {

source $TRAF_CONFIG

$TRAF_PDSH mkdir -p $HOME/tmpTraf
sudo cp -r $SQ_ROOT/sql/scripts/sqconfig $HOME/tmpTraf
sudo cp -r $SQ_ROOT/sql/scripts/sqconfig.db $HOME/tmpTraf
sudo chown -R $(whoami).$(whoami) $HOME/tmpTraf
$TRAF_PDCP -r $HOME/tmpTraf $HOME
$TRAF_PDSH sudo cp -rf $HOME/tmpTraf/sqconfig $SQ_ROOT/sql/scripts 2>&1 > /dev/null
$TRAF_PDSH sudo cp -rf $HOME/tmpTraf/sqconfig.db $SQ_ROOT/sql/scripts 2>&1 > /dev/null
$TRAF_PDSH sudo chown -R $TRAF_USER.trafodion $SQ_ROOT/sql/scripts 2>&1 > /dev/null
$TRAF_PDSH rm -r $HOME/tmpTraf

}

function editDCSServers {

source $TRAF_CONFIG
DCS_DIR=$(sudo ls $SQ_ROOT | grep dcs\*)

let per_node=$DCS_SERVERS_PARM/$node_count
let extras=$DCS_SERVERS_PARM%$node_count
count=1
for node_name in $NODE_LIST
do
   if [ $count -le $extras ]; then
      let node_servers=$per_node+1
   else
      node_servers=$per_node
   fi
   echo $node_name $node_servers >> $PWD/tmpServers
   (( count++ ))
done


$TRAF_PDCP $PWD/tmpServers $HOME
$TRAF_PDSH sudo cp $HOME/tmpServers $SQ_ROOT/$DCS_DIR/conf/servers
$TRAF_PDSH sudo chown $TRAF_USER.trafodion $SQ_ROOT/$DCS_DIR/conf/servers
$TRAF_PDSH sudo rm -rf $HOME/tmp*

}

function dcsStop {

echo "This is where we will use the new dcsstop --node script"

}


function printMessage {

source $TRAF_CONFIG
echo
echo "***IMPORTANT: Node(s) removed!"
echo "***IMPORTANT: EXIT OUT OF ALL EXISTING SHELLS, need to pick up new environment variables"
echo 
echo

}


#Main

deleteNodesConfig
createNewNodes
copyConfig
deleteNodes
sqRegen
copysqConfig
editDCSServers
dcsStop
printMessage

